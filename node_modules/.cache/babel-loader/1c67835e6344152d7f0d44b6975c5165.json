{"ast":null,"code":"import _asyncToGenerator from\"/media/lucas/Code/Code/JavaScript/ReactJs/Projects/bulario/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/media/lucas/Code/Code/JavaScript/ReactJs/Projects/bulario/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/media/lucas/Code/Code/JavaScript/ReactJs/Projects/bulario/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,Error}from'react';import\"../styles/SelectBox.css\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faFilePdf,faQrcode,faUpload}from'@fortawesome/free-solid-svg-icons';import{Link}from'react-router-dom';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SelectBox(){// Gerar QR Code, resolver bug que não redireciona ao link correto de download\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),wroteMedicine=_useState2[0],setWroteMedicine=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),medicineData=_useState4[0],setMedicineData=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isFetched=_useState6[0],setIsFetched=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),totalElements=_useState8[0],setTotalElements=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),QRCodeURL=_useState10[0],setQRCodeURL=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),downloadArea=_useState12[0],setDownloadArea=_useState12[1];function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setWroteMedicine(\"\");setMedicineData([]);setIsFetched(false);setTotalElements(0);_context2.next=6;return axios.get(\"https://bula.vercel.app/pesquisar?nome=\".concat(wroteMedicine,\"&pagina=1\"));case 6:response=_context2.sent;setTotalElements(response.totalElements);_context2.next=10;return response.data.content;case 10:return _context2.abrupt(\"return\",_context2.sent);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchData.apply(this,arguments);}var UserMedicine=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var a;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchData();case 2:a=_context.sent;setMedicineData(a);setIsFetched(true);setDownloadArea(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function UserMedicine(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"bulario-title\",children:\"Bul\\xE1rio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"\",className:\"input-search\",id:\"\",list:\"medicines\",onChange:function onChange(e){return setWroteMedicine(e.target.value);}}),/*#__PURE__*/_jsxs(\"datalist\",{id:\"medicines\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"MICROVLAR\"}),/*#__PURE__*/_jsx(\"option\",{children:\"SELENE\"}),/*#__PURE__*/_jsx(\"option\",{children:\"YASMIN\"}),/*#__PURE__*/_jsx(\"option\",{children:\"DIANE\"}),/*#__PURE__*/_jsx(\"option\",{children:\"LUMI\"}),/*#__PURE__*/_jsx(\"option\",{children:\"SIBLIMA\"}),/*#__PURE__*/_jsx(\"option\",{children:\"YAZ\"}),/*#__PURE__*/_jsx(\"option\",{children:\"MIRELLE\"}),/*#__PURE__*/_jsx(\"option\",{children:\"MINIMA\"}),/*#__PURE__*/_jsx(\"option\",{children:\"ADOLESS\"}),/*#__PURE__*/_jsx(\"option\",{children:\"GESTINOL\"}),/*#__PURE__*/_jsx(\"option\",{children:\"ELANI\"}),/*#__PURE__*/_jsx(\"option\",{children:\"UTROGESTAN\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return UserMedicine();},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSearch})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listed-medicines-labs\",style:isFetched?{\"borderRadius\":\"10px\",padding:\"0px 10px\"}:null,children:[/*#__PURE__*/_jsx(\"br\",{}),isFetched?medicineData.map(function(medicine){var cnpj=medicine.cnpj,data=medicine.data,expediente=medicine.expediente,idBulaPacienteProtegido=medicine.idBulaPacienteProtegido,idBulaProfissionalProtegido=medicine.idBulaProfissionalProtegido,idProduto=medicine.idProduto,nomeProduto=medicine.nomeProduto,numProcesso=medicine.numProcesso,numeroRegistro=medicine.numeroRegistro,numeroTransacao=medicine.numeroTransacao,razaoSocial=medicine.razaoSocial;return/*#__PURE__*/_jsxs(\"div\",{className:\"RenderingMedicine\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"productName\",style:{fontWeight:\"700\"},children:nomeProduto}),\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"productData\",children:[\"- \",razaoSocial]}),downloadArea?/*#__PURE__*/_jsx(Link,{to:\"/readfile\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"icon upload\",icon:faUpload})}):null,/*#__PURE__*/_jsx(\"a\",{href:\"https://consultas.anvisa.gov.br/#/bulario/q/?nomeProduto=\".concat(nomeProduto,\"&expediente=\").concat(expediente,\"&cnpj=\").concat(cnpj),target:\"_blank\",onClick:function onClick(){return setDownloadArea(true);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"icon paciente\",icon:faFilePdf})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"hr\",{})]},numeroRegistro);}):null]})]});}export default SelectBox;","map":{"version":3,"sources":["/media/lucas/Code/Code/JavaScript/ReactJs/Projects/bulario/src/components/WebsiteRoutes/components/homepage/SelectBox.jsx"],"names":["React","useState","useEffect","Error","FontAwesomeIcon","faSearch","faFilePdf","faQrcode","faUpload","Link","axios","SelectBox","wroteMedicine","setWroteMedicine","medicineData","setMedicineData","isFetched","setIsFetched","totalElements","setTotalElements","QRCodeURL","setQRCodeURL","downloadArea","setDownloadArea","fetchData","get","response","data","content","UserMedicine","a","e","target","value","padding","map","medicine","cnpj","expediente","idBulaPacienteProtegido","idBulaProfissionalProtegido","idProduto","nomeProduto","numProcesso","numeroRegistro","numeroTransacao","razaoSocial","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Error} from 'react'\nimport \"../styles/SelectBox.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faFilePdf, faQrcode, faUpload } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from 'react-router-dom'\nimport axios from \"axios\"\n\nfunction SelectBox() {\n\n    // Gerar QR Code, resolver bug que não redireciona ao link correto de download\n\n    const [wroteMedicine, setWroteMedicine] = useState(\"\")\n    const [medicineData, setMedicineData] = useState([])\n    const [isFetched, setIsFetched] = useState(false)\n    const [totalElements, setTotalElements] = useState(0)\n    const [QRCodeURL, setQRCodeURL] = useState(\"\")\n    const [downloadArea, setDownloadArea] = useState(false)\n\n    async function fetchData(){\n        setWroteMedicine(\"\")\n        setMedicineData([])\n        setIsFetched(false)\n        setTotalElements(0)\n        const response = await axios.get(`https://bula.vercel.app/pesquisar?nome=${wroteMedicine}&pagina=1`)\n        setTotalElements(response.totalElements)\n        return await response.data.content\n    }\n\n    const UserMedicine = async() => {\n        const a = await fetchData()\n        setMedicineData(a)\n        setIsFetched(true)\n        setDownloadArea(false)\n    }\n\n   \n\n  return (\n    <React.Fragment>\n        <h1 className=\"bulario-title\">Bulário</h1>\n        <div className=\"search-area\">\n            <input type=\"text\" name=\"\" className=\"input-search\" id=\"\" list='medicines' onChange={(e)=>setWroteMedicine(e.target.value)} />\n\n            <datalist id='medicines'>\n                <option>MICROVLAR</option>\n                <option>SELENE</option>\n                <option>YASMIN</option>\n                <option>DIANE</option>\n                <option>LUMI</option>\n                <option>SIBLIMA</option>\n                <option>YAZ</option>\n                <option>MIRELLE</option>\n                <option>MINIMA</option>\n                <option>ADOLESS</option>\n                <option>GESTINOL</option>\n                <option>ELANI</option>\n                <option>UTROGESTAN</option>\n            </datalist>\n\n            <button onClick={()=>UserMedicine()}>\n                <FontAwesomeIcon icon={faSearch} />\n            </button>\n        </div>\n        <div className=\"listed-medicines-labs\" style={isFetched?{\"borderRadius\":\"10px\", padding:\"0px 10px\"}:null}>\n            <br />\n            {isFetched?medicineData.map((medicine)=>{\n                const {cnpj, data, expediente, idBulaPacienteProtegido, idBulaProfissionalProtegido, idProduto, nomeProduto, numProcesso, numeroRegistro, numeroTransacao, razaoSocial} = medicine\n\n                return(\n                    <div key={numeroRegistro} className='RenderingMedicine'>\n                        <span>\n                            <span className='productName' style={{fontWeight:\"700\"}}>{nomeProduto}</span> <span className=\"productData\">- {razaoSocial}</span>\n                            \n\n                            {downloadArea?<Link to={\"/readfile\"}>\n                                <FontAwesomeIcon className='icon upload' icon={faUpload}/>\n                            </Link>:null}\n                            \n\n                            <a href={`https://consultas.anvisa.gov.br/#/bulario/q/?nomeProduto=${nomeProduto}&expediente=${expediente}&cnpj=${cnpj}`} target=\"_blank\" onClick={()=>setDownloadArea(true)}>\n                                <FontAwesomeIcon className='icon paciente' icon={faFilePdf}/>\n                            </a>\n                            <br />\n                            <br />\n                        </span>\n                        <hr/>\n                    </div>\n                )\n\n            }):null}\n        </div>\n    </React.Fragment>\n  )\n}\n\nexport default SelectBox"]},"metadata":{},"sourceType":"module"}